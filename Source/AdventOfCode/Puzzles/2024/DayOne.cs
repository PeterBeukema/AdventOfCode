namespace AdventOfCode.Puzzles._2024;

public class DayOne : DailyPuzzle
{
    private const string Data = "16435   48069\n29877   97906\n75256   47355\n25417   59861\n32479   25840\n93953   70621\n21297   57288\n41677   60361\n42091   83949\n74831   40059\n53533   90866\n83870   18758\n78929   96272\n85446   75644\n31544   20514\n44640   95346\n34692   16581\n58962   98590\n96508   73793\n51394   82185\n67019   14797\n21518   90866\n62995   55469\n92092   60333\n10928   40778\n34981   54922\n26876   16871\n66391   76794\n35901   72739\n18722   70980\n59497   95346\n53275   28152\n72863   99447\n72352   17518\n26468   24820\n47173   72739\n26320   91005\n45747   59416\n75354   53464\n92639   39605\n64080   70333\n88779   94760\n29791   29540\n14969   24339\n68889   95657\n43718   66328\n60142   37044\n42450   32006\n35427   24596\n93679   54211\n40579   99513\n77933   92955\n37363   58645\n21837   90108\n35039   32006\n62179   52479\n39307   87105\n41332   22158\n94358   79034\n98963   86986\n54717   23049\n43654   87991\n69077   29183\n74844   10737\n91597   95657\n66949   30736\n81313   60629\n90912   58645\n47394   49695\n57684   49541\n19355   51537\n97320   60629\n51077   10528\n84716   17518\n88351   72102\n92708   95275\n26477   81328\n52505   95346\n58645   11050\n23594   85720\n87114   42541\n38462   90479\n65339   97931\n78707   39134\n15918   43734\n41210   56231\n33740   74486\n50265   19552\n18061   65123\n17367   98281\n11451   59861\n88878   53722\n14797   99513\n62073   24339\n65570   84766\n42945   17518\n23455   12294\n25840   58543\n94923   36663\n64165   40778\n89639   68002\n27073   68295\n64190   41338\n95406   23115\n28580   93136\n58531   68295\n17091   39868\n89097   17518\n15175   57673\n70127   72739\n40844   30310\n32925   78574\n49275   63049\n58522   49668\n97797   71228\n29582   25233\n21116   66017\n23705   74772\n28596   52133\n84202   56951\n81833   95086\n21602   41338\n60874   14188\n79507   17518\n92289   83068\n59695   26824\n30349   15180\n76097   37974\n90866   49353\n94385   53723\n70221   44740\n20886   49695\n93814   65374\n67792   97310\n24209   49695\n46911   10601\n52145   23998\n35113   67360\n10340   24820\n23363   21859\n46370   66071\n92407   31362\n57569   35818\n16621   52898\n44760   73118\n91961   16871\n49347   99513\n77133   34172\n85477   27153\n40137   26229\n78890   77054\n19791   50353\n66006   31362\n82274   24820\n77644   62375\n93936   79010\n47149   43188\n36490   68295\n23305   47089\n54503   57531\n95877   94109\n20859   60322\n94959   17518\n77232   96684\n63958   56864\n75367   59264\n15010   16750\n67442   11605\n19373   24339\n12449   16871\n49748   43188\n52620   45936\n47647   26176\n24137   82456\n90427   58020\n73412   91408\n32252   69890\n29261   92008\n74693   32006\n41579   59648\n31429   96033\n56097   46048\n44950   60750\n43971   39856\n59469   12788\n11373   21570\n12061   76677\n65372   19313\n59499   43522\n13640   58645\n26832   91689\n54344   16581\n65273   95657\n33991   52033\n11683   86765\n58927   91644\n39325   71159\n90238   91743\n40526   20631\n26038   67879\n16808   91750\n13799   37351\n37248   29318\n45920   72408\n85648   19390\n66092   95346\n58553   99520\n63800   63316\n56780   58645\n81096   82429\n30787   86285\n59633   61266\n43677   19293\n79162   43188\n13632   43188\n83126   83818\n10649   53368\n54696   74844\n27113   20522\n32739   74844\n49396   26932\n55625   61210\n57489   24339\n96581   60629\n18357   23964\n50387   56444\n78519   68400\n96718   46458\n91448   16871\n20052   60629\n95230   32006\n22052   69248\n90604   25946\n11139   41121\n35546   97243\n58323   89900\n44445   68295\n94442   72739\n16048   58645\n74949   69890\n81915   53723\n31606   45624\n25300   49703\n41338   45059\n30274   57910\n68688   72739\n31971   91743\n19565   70945\n78989   77933\n39992   60452\n87227   36663\n59542   99513\n47044   95657\n40969   37351\n25297   59861\n74790   58645\n86721   16581\n61396   59794\n66410   16871\n96524   14797\n67455   39856\n49695   88656\n93222   60629\n97465   43188\n98283   58100\n24511   37192\n80045   91061\n97212   39856\n14409   78213\n62374   21104\n85065   13069\n24675   37351\n23975   56283\n17562   37351\n82898   69763\n92248   72739\n88802   74265\n93090   62276\n16605   23345\n56872   60629\n42331   44246\n40692   63017\n64053   40778\n56691   91743\n70406   35082\n74671   19741\n81878   73790\n35731   78345\n97104   37351\n98067   63953\n68290   87534\n82210   69702\n21560   90866\n79248   43333\n37000   25840\n82588   16581\n52634   41338\n90100   46437\n16029   91163\n38326   47108\n60226   26252\n77086   37351\n79446   68295\n97224   50705\n17675   68295\n64106   87392\n85496   25840\n75485   99513\n75698   22859\n24342   79034\n46880   54120\n68573   66287\n46608   24820\n25059   51395\n91385   11684\n82361   58645\n11563   63197\n53683   91495\n85007   44104\n56710   15212\n64028   60629\n73189   39856\n44895   95868\n66152   94252\n72272   98068\n79283   39400\n39856   44986\n62116   36663\n77850   24378\n27195   77933\n29717   61825\n58456   75051\n16162   27830\n94771   56372\n72874   76831\n26966   30051\n28969   65366\n79145   35697\n75048   31362\n29692   72739\n86495   36663\n78868   65405\n48543   80206\n48252   36663\n27605   31362\n38669   14797\n76442   29177\n36193   19056\n73037   68295\n34757   17518\n91312   16871\n69099   75003\n44500   84372\n61860   10606\n64698   95346\n39869   95346\n93116   24339\n30369   62058\n65899   93381\n68519   62639\n24048   50583\n47972   43188\n53891   17199\n54451   16384\n31280   12954\n20399   59861\n45783   16886\n98775   34718\n48390   45773\n93583   28085\n96206   30318\n12588   72739\n15698   42059\n97712   24685\n38580   68295\n34395   48669\n23049   13857\n24820   63441\n56864   14051\n46690   69040\n77603   58645\n46878   44485\n47171   62062\n46708   66867\n50525   15967\n50282   67958\n55230   17518\n32552   60629\n41714   40778\n35644   14797\n67623   58645\n56606   12810\n85977   69890\n52701   99767\n60629   49978\n17680   47067\n25372   68295\n98212   97859\n40568   91743\n41527   35470\n10528   12131\n44728   69890\n40026   56864\n15934   18029\n12465   68295\n40634   99513\n59014   22289\n68197   18925\n18082   39856\n75040   77629\n45384   32310\n41916   53723\n35128   52273\n80754   26932\n31342   33095\n27303   95346\n64827   98396\n99513   40642\n41314   39714\n19671   50384\n30923   72739\n45018   24820\n79548   27333\n55411   95346\n47707   44497\n50875   20288\n27914   72739\n19353   19177\n97123   17111\n30579   39228\n51476   29286\n13574   68295\n79359   94446\n48141   70031\n43241   24491\n48136   90788\n87448   59861\n61514   93540\n42728   35079\n83862   74844\n71949   90248\n79924   42545\n20640   37351\n16549   99836\n52489   40778\n89623   84050\n72593   53723\n23289   78424\n82803   60629\n11727   14729\n61214   95346\n12199   31177\n19169   42147\n73807   14797\n11622   26567\n25058   82587\n28775   30058\n91583   72739\n55536   92087\n94095   16581\n72890   30154\n62775   73678\n70295   74844\n41751   50232\n56993   40778\n82031   89970\n74057   92795\n17518   36518\n99629   93756\n61336   39856\n43975   60629\n81289   60317\n69367   91987\n40283   90866\n61911   14797\n95657   58645\n39067   22979\n67250   40444\n23292   98418\n88887   52557\n85949   25840\n38715   93195\n40612   39856\n87534   46295\n70873   95346\n85930   95058\n89567   58645\n93731   14797\n52695   16248\n14578   16871\n46609   36713\n59861   68864\n14621   96581\n20328   42649\n17390   38199\n68295   16871\n41982   16581\n17348   36663\n72246   89941\n90096   30182\n19205   59402\n90078   31362\n90572   20465\n78173   41338\n99825   41124\n84869   48272\n97111   60629\n46975   54184\n82586   24853\n11832   90866\n70440   74844\n13421   24820\n90891   59878\n70480   96457\n65072   17518\n88516   42832\n47360   24339\n87714   16581\n85563   47998\n58866   20085\n46273   99513\n15260   72739\n45102   30648\n29064   24339\n88846   37351\n90349   73175\n98819   16581\n30367   16581\n41951   60629\n86574   14180\n25619   87579\n79116   29532\n57943   95571\n26147   63579\n75102   11022\n87742   41296\n66894   59569\n45617   40778\n23600   53723\n89356   36150\n68062   59438\n57149   23878\n79451   75997\n47353   40778\n74094   89703\n79034   56864\n86009   68295\n81225   63214\n31607   16581\n12367   24339\n50512   79034\n65420   68295\n17083   16581\n80423   53723\n30678   91572\n53711   96581\n52826   39856\n94443   40778\n12923   91792\n19993   72739\n41316   16871\n43188   37351\n41603   37528\n41116   54751\n47492   98390\n52271   59349\n82016   25145\n11995   21137\n87664   95346\n60087   23049\n77487   16901\n77742   99513\n99837   20739\n68435   37491\n62077   68336\n80241   62885\n82671   40778\n81232   95346\n46669   64387\n32390   54356\n49245   60629\n40533   41398\n84643   99513\n39991   18128\n30313   16871\n59426   67766\n47142   99513\n71211   23816\n59935   37011\n31958   92255\n32153   14797\n86833   74758\n52808   43188\n40778   88213\n79022   49695\n87874   82407\n72182   92976\n39448   78503\n97758   40778\n81407   43795\n80992   24339\n19276   84821\n46590   95657\n10895   45077\n80793   51112\n63442   40778\n30847   69890\n32880   51194\n59288   15697\n96900   79034\n63642   34441\n33550   90746\n72357   53146\n97040   96439\n40378   10528\n59435   73396\n31818   22834\n69483   42827\n93889   25840\n11266   27279\n56221   16581\n66149   11829\n96835   41338\n63931   58300\n24339   51351\n95811   77063\n74048   59624\n66188   69890\n20544   96581\n40662   37351\n99514   39856\n71983   43188\n78773   99907\n10964   17518\n56979   59861\n93887   88701\n34552   41338\n27038   71349\n69694   77839\n24942   16871\n18028   16581\n34653   49695\n90330   96581\n98296   57537\n53814   33645\n89964   99513\n37589   17342\n10909   91358\n98527   61419\n32976   28119\n33686   37351\n79495   96581\n45397   53294\n79339   86426\n48269   96581\n67186   90866\n76245   99759\n84154   16581\n84888   51210\n33764   89139\n62796   89821\n42861   22488\n78612   52016\n13839   61720\n40455   95346\n52976   51066\n55173   70350\n47339   87604\n29374   13727\n23406   41338\n84137   99513\n61630   49695\n89925   31362\n80845   75693\n88731   24339\n10621   16684\n23613   60875\n22775   19909\n82644   55448\n55188   68295\n13213   85572\n46020   43188\n38894   22924\n68114   96447\n39872   43590\n84638   35446\n92596   14492\n66910   33854\n63454   81254\n37266   35231\n22257   69890\n89661   16581\n63655   58645\n63891   18254\n85248   39765\n22476   49695\n80842   44794\n10278   97117\n96407   72472\n13688   69809\n20190   50894\n16581   81145\n44118   16735\n44289   61819\n83096   66134\n78920   67405\n30294   22869\n12953   87534\n58065   40778\n80257   41656\n65705   79885\n36010   96068\n12082   33841\n57211   54993\n37556   60629\n70791   39856\n83423   90866\n69501   99513\n75688   95346\n19823   31534\n38253   58645\n38183   33154\n32520   72739\n65756   17518\n62670   12393\n17780   24339\n39071   69840\n90304   55306\n23602   69069\n40739   17518\n46361   87753\n15902   17518\n37784   40225\n30916   42636\n23707   99099\n91290   60611\n33864   60629\n93983   78860\n35469   30176\n21070   24339\n83225   14434\n81426   30459\n83168   49695\n20409   69540\n57527   41338\n49574   48918\n36663   64740\n60394   55739\n87952   77933\n87075   42596\n48587   15230\n69841   40778\n50428   41338\n61418   55126\n99136   64249\n66778   30866\n23040   15532\n79526   91743\n37251   36885\n67189   23898\n47448   69375\n90585   40778\n98236   52391\n63822   22592\n19611   30041\n99334   17027\n78062   33410\n67694   18537\n29196   30111\n85703   93883\n62167   58645\n93337   36476\n77737   80458\n96370   13575\n42996   18247\n23203   46338\n72739   26537\n59099   17518\n13739   80947\n56865   21685\n72378   95346\n86826   96979\n18269   42316\n57660   49695\n47959   43002\n36489   39334\n50097   95346\n13746   95122\n48963   53723\n30101   17518\n83534   73195\n59841   80333\n69877   53999\n92081   18047\n49205   50055\n48937   13416\n16871   78838\n80567   99399\n64382   72739\n36178   71044\n55868   49695\n46804   48607\n76304   58645\n38942   47637\n56622   31362\n67077   26932\n22630   10374\n73652   99587\n24594   16871\n40607   95967\n24466   48026\n99685   45844\n41070   32483\n53109   91914\n13303   24079\n90567   95346\n63113   38867\n69961   58038\n71621   30015\n48447   51612\n39391   47825\n31318   79034\n54449   69890\n95458   12438\n17168   25163\n59625   57006\n33979   13374\n52341   77943\n31362   95866\n17105   90866\n58391   99513\n59577   89128\n56230   55488\n95001   32006\n60469   78894\n54419   60629\n63827   93358\n98150   35728\n33965   78590\n42272   53373\n27833   18242\n82723   52358\n50442   16871\n63005   29081\n80894   11880\n90215   85310\n93510   41660\n11301   68295\n76924   58645\n96481   20952\n65294   53723\n36656   82851\n28496   68673\n14320   68295\n46083   45432\n22802   39856\n98104   98886\n67972   39856\n10720   24339\n83626   37351\n67343   45562\n96312   99513\n31279   74844\n26421   85831\n84257   32937\n16680   21022\n20670   19227\n62741   95346\n59245   98417\n67916   37351\n89880   51840\n88768   54835\n33728   31362\n64155   37351\n17490   37351\n97853   58367\n21580   59627\n50349   72739\n17014   10528\n95346   92967\n15226   43188\n26310   68295\n50644   68295\n25134   59861\n79187   36085\n21594   81212\n59975   88554\n14723   76634\n59988   95657\n44916   73103\n25459   53723\n99883   17518\n91474   38109\n50240   72739\n90665   40778\n41306   41338\n20093   40778\n77543   84251\n50058   27789\n84976   91503\n25891   68176\n46484   60629\n97473   35979\n86274   69890\n38121   59861\n15406   76925\n74418   39631\n14474   12043\n59783   57253\n37351   80209\n33242   29891\n32795   85969\n86292   27806\n14090   27607\n31394   94227\n17591   67502\n22263   47087\n17909   39856\n37774   72113\n67198   25501\n25288   74844\n48203   91565\n99738   35641\n18706   58645\n54532   68295\n18588   60629\n79083   69890\n86349   31362\n93820   41744\n18344   69890\n80025   52503\n32006   74591\n59686   33314\n10486   97011\n55016   98273\n57123   38719\n72794   24339\n87491   50497\n79579   53723\n65429   24980\n31765   16581\n73697   17518\n91743   97390\n21682   37461\n69890   12585\n72614   19372\n88539   32006\n45679   73733\n41030   91552\n40402   74844\n32675   57436\n40058   58645\n10228   16871\n67908   36615\n32413   12311\n73185   63638\n68526   84874\n49242   95657\n80390   41338\n94376   58645\n47392   77933\n91154   90866\n58956   98634\n81713   45892\n41037   85888\n80016   46343\n62931   53723\n75384   40778\n47227   11574\n99463   32006\n53299   40778\n49977   68975\n49678   49695\n54480   26569\n50457   50082\n53723   41338\n99495   56029\n41074   38257\n90818   72739\n26932   74844\n49941   71563\n16356   37996\n76996   56074\n11524   85522\n30416   90866\n91352   61520\n24977   49695\n49451   89237\n21400   39529\n87568   37175\n96017   95346\n90873   68295\n91037   47664\n75674   99513\n11356   75031\n66871   37296\n33330   86365\n66278   96190\n18682   72272\n42394   36663";

    public override int Year => 2024;
    public override int Day => 1;

    public override void Solve()
    {
        var (first, second) = GetParsedData();

        SolvePartOne(first, second);
        SolvePartTwo(first, second);
    }

    private static void SolvePartOne(List<int> first, List<int> second)
    {
        var orderedFirstList = first.OrderDescending().ToList();
        var orderedSecondList = second.OrderDescending().ToList();

        var differences = new List<int>();

        for (var index = 0; index < orderedFirstList.Count; index++)
        {
            var firstValue = orderedFirstList[index];
            var secondValue = orderedSecondList[index];

            var difference = firstValue > secondValue
                ? firstValue - secondValue
                : secondValue - firstValue;

            differences.Add(difference);
        }

        var sum = differences.Sum();

        Console.WriteLine("Day 1, part One: " + sum);
    }

    private static void SolvePartTwo(List<int> first, List<int> second)
    {
        var similarityScore = 0;

        foreach (var entry in first)
        {
            var occurrencesInSecond = second.Count(item => item == entry);

            similarityScore += (entry * occurrencesInSecond);
        }

        Console.WriteLine("Day 1, part Two: " + similarityScore);
    }

    private static (List<int>, List<int>) GetParsedData()
    {
        var lines = Data.Split("\n");

        var firstList = new List<int>();
        var secondList = new List<int>();

        foreach (var line in lines)
        {
            var values = line.Split("   ");

            var firstValue = int.Parse(values[0]);
            var secondValue = int.Parse(values[1]);

            firstList.Add(firstValue);
            secondList.Add(secondValue);
        }

        return (firstList, secondList);
    }
}